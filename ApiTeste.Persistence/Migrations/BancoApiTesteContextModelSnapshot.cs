// <auto-generated />
using System;
using ApiTeste.Persistence.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiTeste.Persistence.Migrations
{
    [DbContext(typeof(BancoApiTesteContext))]
    partial class BancoApiTesteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiTeste.Domain.Entities.TblLivro", b =>
                {
                    b.Property<string>("Autor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Titulo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DthDelete")
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Delete");

                    b.Property<DateTime>("DthInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Insert")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DthUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Update");

                    b.Property<int?>("UsuarioIdDelete")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Delete");

                    b.Property<int>("UsuarioIdInsert")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Insert");

                    b.Property<int?>("UsuarioIdUpdate")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Update");

                    b.HasKey("Autor", "Titulo");

                    b.ToTable("TblLivros");
                });

            modelBuilder.Entity("ApiTeste.Domain.Entities.TblPessoaFisica", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("CPF");

                    b.Property<string>("Celular")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime?>("DthDelete")
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Delete");

                    b.Property<DateTime>("DthInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Insert")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DthUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Update");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsuarioIdDelete")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Delete");

                    b.Property<int>("UsuarioIdInsert")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Insert");

                    b.Property<int?>("UsuarioIdUpdate")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Update");

                    b.HasKey("Cpf");

                    b.ToTable("TblPessoaFisica", (string)null);
                });

            modelBuilder.Entity("ApiTeste.Domain.Entities.TblUsuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("CPF");

                    b.Property<DateTime?>("DthDelete")
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Delete");

                    b.Property<DateTime>("DthInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Insert")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DthUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("DTH_Update");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsuarioIdDelete")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Delete");

                    b.Property<int>("UsuarioIdInsert")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Insert");

                    b.Property<int?>("UsuarioIdUpdate")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId_Update");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Cpf");

                    b.ToTable("TblUsuarios");
                });

            modelBuilder.Entity("ApiTeste.Domain.Entities.TblUsuario", b =>
                {
                    b.HasOne("ApiTeste.Domain.Entities.TblPessoaFisica", "CpfNavigation")
                        .WithMany("TblUsuarios")
                        .HasForeignKey("Cpf")
                        .IsRequired()
                        .HasConstraintName("FK_TblUsuarios_TblPessoaFisica");

                    b.Navigation("CpfNavigation");
                });

            modelBuilder.Entity("ApiTeste.Domain.Entities.TblPessoaFisica", b =>
                {
                    b.Navigation("TblUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
